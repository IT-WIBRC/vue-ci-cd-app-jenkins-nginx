# Defines a virtual server that handles requests.
server {
    # Specifies the port Nginx will listen on for incoming connections from clients (e.g., web browsers).
    listen 8080;

    # Sets the document rootâ€”the base directory where Nginx looks for static files to serve (e.g., /usr/share/nginx/html/index.html).
    root /usr/share/nginx/html;

    # Defines the file to use as the default index file when a directory is requested (e.g., accessing 'mysite.com/' loads 'index.html').
    index index.html;

    # Hides the Nginx version number in error pages and response headers (like Server: Nginx/1.23.4).
    # This is a security measure to prevent attackers from easily knowing potential vulnerabilities.
    server_tokens off;

    # Starts a block to configure how requests for all paths ('/') are handled.
    location / {
        # Tries to find files in this order:
        # 1. The exact requested URI (e.g., /about.html).
        # 2. The URI as a directory (e.g., /pages/ becomes /pages/index.html).
        # 3. If neither is found, it falls back and serves the application's root file (`/index.html`).
        # This is crucial for single-page applications (SPAs) like React or Vue, which handle routing internally.
        try_files $uri $uri/ /index.html;
    }

    # Starts a location block that uses a regular expression to match hidden files (files starting with a dot, e.g., /.git).
    location ~ /\. {
        # Explicitly denies access to these files, improving security by preventing leakage of configuration or sensitive files.
        deny all;
    }
}
